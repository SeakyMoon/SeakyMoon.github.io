<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>利用旧手机搭建LinuxDeploy用作服务器，同时使用frp实现内网穿透</title>
    <url>/2021/11/04/LinuxDeploy/</url>
    <content><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>1、一台已经root的手机（必须要root），我的是安卓9版本的小米9</p>
<p>2、需要的软件</p>
<p>​    Linux Deploy    <a href="https://github.com/meefik/linuxdeploy/releases">下载地址</a></p>
<p>​    BusyBox    <a href="https://github.com/meefik/busybox/releases">下载地址</a> </p>
<p>​    JuiceSSH 或者 Termius都行   因为这三个软件的下载或多或少都需要具备外网的环境，所以如果没有下载途径的话可以直接从我下面的网盘里下载  <a href="https://wwr.lanzoui.com/b01orzgfe">网盘链接</a> 提取码：30yj</p>
<h2 id="安装以及配置步骤"><a href="#安装以及配置步骤" class="headerlink" title="安装以及配置步骤"></a>安装以及配置步骤</h2><p><strong>1、安装BusyBox</strong></p>
<p>​    安装好软件后直接打开点击install就行了，安装过程需要授予它root权限，默认的安装路径是 /system/xbin ，如果需要修改的话可以进到设置里面修改</p>
<p><strong>2、安装Linux Deploy</strong></p>
<p>​    安装好软件后，点击左上角三个横杠，选择设置，勾选 锁定Wi-Fi 和 CPU唤醒 <img src="/2021/11/04/LinuxDeploy/IMG_20211105_002356.jpg"></p>
<p>之后将下面的 PATH变量 设置为你刚才BusyBox的安装路径，之后点 更新环境<img src="/2021/11/04/LinuxDeploy/IMG_20211105_002641.jpg"></p>
<p><strong>3、配置Linux Deploy</strong></p>
<blockquote>
<p><strong>发行版：</strong>我这里选择的是CentOS</p>
</blockquote>
<blockquote>
<p><strong>架构：</strong>架构的话取决于你自己的CPU架构，可以去下载DevCheck 来查看自己的CPU架构，（选错架构的话会导致后面安装失败）可以看到我的是arrch64的，所以我的架构的那一栏就选择arrch64，选择其他发行版的话同理</p>
</blockquote>
<p><img src="/2021/11/04/LinuxDeploy/IMG_20211104_230556.jpg"></p>
<blockquote>
<p><strong>源地址：</strong>推荐使用国内的镜像源，可以从下面的镜像源中选一个</p>
<p><a href="http://mirrors.bfsu.edu.cn/centos-altarch/">http://mirrors.bfsu.edu.cn/centos-altarch/</a><br><a href="http://mirrors.nju.edu.cn/centos-altarch/">http://mirrors.nju.edu.cn/centos-altarch/</a><br><a href="http://mirrors.ustc.edu.cn/centos-altarch/">http://mirrors.ustc.edu.cn/centos-altarch/</a></p>
</blockquote>
<blockquote>
<p><strong>安装类型：</strong>选择镜像，之后可以自己调整镜像大小</p>
</blockquote>
<blockquote>
<p><strong>安装路径：</strong>默认</p>
</blockquote>
<blockquote>
<p><strong>镜像大小：</strong>取决于你自己手机，可以和我一样先设4个G，反正之后可以调整</p>
</blockquote>
<blockquote>
<p><strong>用户名与密码：</strong>自己随便设就行，用于后面通过ssh连接</p>
</blockquote>
<blockquote>
<p><strong>本地化：</strong>选择 zh_CN.UTF-8</p>
</blockquote>
<blockquote>
<p><strong>DNS：</strong>默认</p>
</blockquote>
<blockquote>
<p><strong>挂载：</strong>根据自己需求，如果需要访问手机内部文件则勾选，挂载点设置为下图所示</p>
</blockquote>
<blockquote>
<p><strong>SSH：</strong>没什么好说的，一定要启动，SSH设置保持默认就行</p>
</blockquote>
<p><img src="/2021/11/04/LinuxDeploy/InkedIMG_20211105_002321.jpg"></p>
<p><img src="/2021/11/04/LinuxDeploy/IMG_20211105_005011.jpg"></p>
<p><strong>4、安装CentOS</strong></p>
<p>​    上述配置完成后返回到主页，点击右上角三个点，选择安装，等待安装完成即可。之后点击启动，若如下图所示则表示启动成功，其中倒数第二行后面一定要是done，否则则意味着安装失败<img src="/2021/11/04/LinuxDeploy/IMG_20211105_005726.jpg"></p>
<p><strong>5、登录到Linux</strong></p>
<p>​    打开之前安装的JuiceSSH或者Termius，新建连接，服务器地址填 127.0.0.1 用户名和密码即为之前配置的用户名与密码，之后点击连接，不出意外的话，你就通过ssh连接上了你的Linux。同时你还可以使用处于同一局域网下的其他设备来连接到Linux，服务器地址即为你的手机IP，也就是显示在Linux Deploy软件主页上的地址。</p>
<h2 id="下面讲如何通过内网穿透实现从公网访问这台手机上的Linux"><a href="#下面讲如何通过内网穿透实现从公网访问这台手机上的Linux" class="headerlink" title="下面讲如何通过内网穿透实现从公网访问这台手机上的Linux"></a>下面讲如何通过内网穿透实现从公网访问这台手机上的Linux</h2><p>主流的内网穿透工具有：花生壳、ngrok和frp，其中花生壳是收费的，而且价格还不太低，ngrok和frp都是免费的，不过ngrok免费版本每次启动会变IP，而frp的话则需要你拥有一台具有公网IP的服务器，由于我主要是自己搭着玩的，手上也正好有一台服务器，所以就选择了用frp来实现内网穿透。</p>
<h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><p>frp下载地址：<a href="https://github.com/fatedier/frp/releases%EF%BC%8C%E6%A0%B9%E6%8D%AE%E6%9E%B6%E6%9E%84%E4%B8%8D%E5%90%8C%EF%BC%8C%E9%80%89%E6%8B%A9%E7%9B%B8%E5%BA%94%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD">https://github.com/fatedier/frp/releases，根据架构不同，选择相应版本下载</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.38.0/frp_0.38.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>

<p>然后解压</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.38.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>

<p>可以将解压完的文件改个名，方便使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv frp_0.38.0_linux_amd64 frp</span><br></pre></td></tr></table></figure>

<p>进入frp目录中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd frp</span><br></pre></td></tr></table></figure>

<p>下图为文件夹里包含的文件，其中前三个是与客户端相关的文件（以c结尾代表client即客户端）后三个则是与服务器相关的文件（以s结尾代表server）</p>
<p><img src="/2021/11/04/LinuxDeploy/image-20211105161437051.png" alt="image-20211105161437051"></p>
<p>因为我们是在配置服务端，所以我们可以把前三个文件删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm frpc frpc.ini frpc_full.ini</span><br></pre></td></tr></table></figure>

<p>然后修改frps.ini文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure>

<p>首次打开应该只有如下两行</p>
<p><img src="/2021/11/04/LinuxDeploy/image-20211105162152048.png" alt="image-20211105162152048"></p>
<p>向其中添加如下配置</p>
<p><img src="/2021/11/04/LinuxDeploy/image-20211105162431060.png" alt="image-20211105162431060"></p>
<blockquote>
<p><strong>bind_port：</strong>表示用于客户端和服务端连接的端口，这个端口号我们之后在配置客户端的时候要用到。</p>
<p><strong>dashboard_port：</strong>是服务端仪表板的端口，若使用7500端口，在配置完成服务启动后可以通过浏览器访问 x.x.x.x:7500 （其中x.x.x.x为你服务器的IP）查看frp服务运行信息。</p>
<p><strong>token：</strong>是用于客户端和服务端连接的口令，请自行设置并记录，稍后会用到。</p>
<p><strong>dashboard_user 和 dashboard_pwd：</strong>表示打开仪表板页面登录的用户名和密码，自行设置即可。</p>
<p><strong>vhost_http_port 和 vhost_https_port：</strong>用于反向代理HTTP主机时使用，本文没有使用，可以不管</p>
</blockquote>
<p>编辑完成保存退出就行（vim操作不会的话自行百度搜索）</p>
<p>之后就可以运行frps的服务端了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure>

<p>如下图所示即代表运行正常，可以访问 x.x.x.x:7500 并使用自己刚设置的用户名密码登录，即可看到仪表盘界面</p>
<p><img src="/2021/11/04/LinuxDeploy/image-20211105163022084.png" alt="image-20211105163022084"></p>
<p>此时的服务端仅运行在前台，如果Ctrl+C停止或者关闭SSH窗口后，frps都会停止运行，因此使用nohup命令将其运行在后台，首先Ctrl+C停止服务，之后输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup ./frps -c frps.ini &amp;</span><br></pre></td></tr></table></figure>

<p>输出如下内容即表示正常运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup: ignoring input and appending output to &#x27;nohup.out&#x27;</span><br></pre></td></tr></table></figure>

<p>此时使用Ctrl+C关闭nohup，frps依然会在后台运行，使用jobs命令查看后台运行的程序，可以看到frps在后台正常运行。</p>
<p>接下来配置服务器端开机自启。由于在Linux Deploy中搭建的CentOS无法使用systemctl以及service命令，所以我们需要进行下面的操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/smaknsk/servicectl/archive/1.0.tar.gz</span><br><span class="line">tar -xf 1.0.tar.gz -C /usr/local/lib/</span><br><span class="line">ln -s /usr/local/lib/servicectl-1.0/servicectl /usr/bin/servicectl</span><br><span class="line">ln -s /usr/local/lib/servicectl-1.0/serviced /usr/bin/serviced</span><br></pre></td></tr></table></figure>

<p>之后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /lib/systemd/system/frps.service</span><br></pre></td></tr></table></figure>

<p>在frps.service里写入一下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=fraps service</span><br><span class="line">After=network.target network-online.target syslog.target</span><br><span class="line">Wants=network.target network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line"></span><br><span class="line">#启动服务的命令（此处写你的frps的实际安装目录）</span><br><span class="line">ExecStart=/your/path/frps -c /your/path/frps.ini</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>然后启动frps</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo servicectl start frps</span><br></pre></td></tr></table></figure>

<p>打开自启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo servicectl enable frps</span><br></pre></td></tr></table></figure>

<p>至此服务端配置完毕</p>
<h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>同样使用wget命令将相应版本的frp压缩包下载并解压，并删除其中frps相关的文件，留下frpc相关文件，编辑frpc.ini文件，默认打开如下图所示</p>
<p><img src="/2021/11/04/LinuxDeploy/image-20211105165332239.png" alt="image-20211105165332239"></p>
<p>由于之前在服务端配置了token，所以在客户端我们需要加入token</p>
<p><img src="/2021/11/04/LinuxDeploy/image-20211105165425435.png" alt="image-20211105165425435"></p>
<p>其中common字段下的三项分别为服务端的IP地址、端口以及刚添加的token，这些与之前服务端配置的保持一致就行</p>
<p>SSH字段则可以理解为自定义的规则，若之后你需要映射其他的端口，按照它的格式填写即可。</p>
<blockquote>
<p><strong>[SSH]：</strong>表示规则名称，自己定义</p>
<p><strong>type：</strong>表示转发的协议类型，有TCP和UDP等选项可选择，可自行查询frp的手册</p>
<p><strong>local_port：</strong>是本地应用的端口号，保持一致就行</p>
<p><strong>remote_port：</strong>为该条规则在服务端开放的端口号，自己定义</p>
<p>配置完成即可运行frpc了，执行如下命令</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./frpc -c frpc.ini</span><br></pre></td></tr></table></figure>

<p>配置开机自启则与服务端配置相似</p>
<p>之后即可通过SSH连接到你的手机，IP地址为你服务器的IP地址，端口号为6000（即为你在SSH字段定义的端口），用户名与密码即为最初配置Linux Deploy设置的用户名与密码，教程结束。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>搞机</tag>
      </tags>
  </entry>
</search>
